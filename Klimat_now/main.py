# импорт нужных библиотек - отдельная ячейка
import pandas as pd
import matplotlib.pyplot as plt
import numpy as np

df = pd.read_csv('Data.csv', sep=";")

# 1.Приведение названий столбцов в соответствии с PEP8 - отдел ячейка
df.columns = df.columns.str.replace(' ', '_').str.lower()
#

pd.set_option('display.max_columns', None)  # убрать эту строку, она чисто для работы

# 2.перевод данных к правильному типу - отдел ячейка
df['год'] = df['год'].astype('int')
#

# 4. удаление дубликатов(категориальных данных) - отдел ячейка
df_no_duplicates = df.drop_duplicates(
    subset=['время_года', 'способ_охлаждения', 'режим_при_смешанном_типе_охлаждения', 'способ_обогрева', 'пол',
            'ощущение_температуры_(bool)', 'предпочтительное_изменение_температуры', 'ощущение_движения_воздуха_(bool)',
            'предпочтительное_изменение_движения_воздуха', 'занавески', 'вентилятор',
            'окно', 'двери', 'отопление'],
    keep=False)
#

# 3.обработка пропусков - отдельная ячейка
df['рост'] = df['рост'].fillna(df['рост'].describe().median())
df['вес'] = df['вес'].fillna(df['вес'].describe().median())
df['оценка_комфорта'] = df['оценка_комфорта'].fillna(df['оценка_комфорта'].describe().loc['50%'])
df['пол'] = df['пол'].fillna('Пол не указан')
#





# 6.Обработка данных на выбросы и адекватность данных - отдельная ячейка
def emissions(zxc):
    for i in ['утепление', 'температура_воздуха_в_помещении', 'скорость_воздуха', 'рост',
              'среднемесячная_температура_на_улице']:
        zxc = zxc[(zxc[i] > zxc[i].quantile(0.01)) & (zxc[i] < zxc[i].quantile(0.99))]
    return zxc


df1 = emissions(df)

# Неадекватные данные
df.loc[df['климат'] == 'Субтроп океанич', 'климат'] = 'Субтропический океанический'
df.loc[df['способ_охлаждения'] == 'Тепле', 'способ_охлаждения'] = 'Теплее'
df.loc[df['способ_охлаждения'] == 'Холодн', 'способ_охлаждения'] = 'Холоднее'
#


# Дополнительный категориальный столбец - количество_рекламаций_категории - отдельная ячейка
def qwe(x):
    if x <= 1:
        return 'мало'
    elif x == 2:
        return 'средне'
    elif x > 2:
        return 'много'


df['количество_рекламаций_кат'] = [qwe(i) for i in df['количество_рекламаций']]


#


# дополнительный категориальный столбец - возраст_категории - отдельная ячейка
def zxc(z):
    if z <= 44:
        return 'молодой возраст'
    elif 45 <= z <= 59:
        return 'средний возраст'
    elif z > 60:
        return 'пожилой возраст'


df1['возраст_кат'] = [zxc(i) for i in df1['возраст']]
#


# средний возраст респондентов по полу и стране - отдельная ячейка
print(df1[['страна', 'пол', 'возраст']].groupby(['страна', 'пол']).mean())
#

# Рассчет средней комфортной температуры в зависимости от возрастной категории - отдельная ячейка
df3 = df1[['температура_воздуха_в_помещении', 'оценка_комфорта', 'возраст_кат']]
df3['оценка_комфорта'] = df3.loc[df3['оценка_комфорта'] == 6, 'оценка_комфорта']
print(df3.dropna().groupby(['возраст_кат', 'оценка_комфорта']).mean())
#


